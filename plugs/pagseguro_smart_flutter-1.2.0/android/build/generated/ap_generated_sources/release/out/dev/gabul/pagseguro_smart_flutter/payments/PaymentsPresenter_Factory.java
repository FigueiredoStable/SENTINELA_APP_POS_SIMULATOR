// Generated by Dagger (https://dagger.dev).
package dev.gabul.pagseguro_smart_flutter.payments;

import br.com.uol.pagseguro.plugpagservice.wrapper.PlugPag;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import io.flutter.plugin.common.MethodChannel;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PaymentsPresenter_Factory implements Factory<PaymentsPresenter> {
  private final Provider<PlugPag> plugPagProvider;

  private final Provider<MethodChannel> channelProvider;

  public PaymentsPresenter_Factory(Provider<PlugPag> plugPagProvider,
      Provider<MethodChannel> channelProvider) {
    this.plugPagProvider = plugPagProvider;
    this.channelProvider = channelProvider;
  }

  @Override
  public PaymentsPresenter get() {
    return newInstance(plugPagProvider.get(), channelProvider.get());
  }

  public static PaymentsPresenter_Factory create(Provider<PlugPag> plugPagProvider,
      Provider<MethodChannel> channelProvider) {
    return new PaymentsPresenter_Factory(plugPagProvider, channelProvider);
  }

  public static PaymentsPresenter newInstance(PlugPag plugPag, MethodChannel channel) {
    return new PaymentsPresenter(plugPag, channel);
  }
}
