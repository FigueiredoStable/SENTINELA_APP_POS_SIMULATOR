// Generated by Dagger (https://dagger.dev).
package dev.gabul.pagseguro_smart_flutter.nfc;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dev.gabul.pagseguro_smart_flutter.managers.UserDataManager;
import dev.gabul.pagseguro_smart_flutter.nfc.usecase.NFCUseCase;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NFCPresenter_Factory implements Factory<NFCPresenter> {
  private final Provider<NFCFragment> mFragmentProvider;

  private final Provider<NFCUseCase> nfcUseCaseProvider;

  private final Provider<UserDataManager> userManagerProvider;

  public NFCPresenter_Factory(Provider<NFCFragment> mFragmentProvider,
      Provider<NFCUseCase> nfcUseCaseProvider, Provider<UserDataManager> userManagerProvider) {
    this.mFragmentProvider = mFragmentProvider;
    this.nfcUseCaseProvider = nfcUseCaseProvider;
    this.userManagerProvider = userManagerProvider;
  }

  @Override
  public NFCPresenter get() {
    return newInstance(mFragmentProvider.get(), nfcUseCaseProvider.get(), userManagerProvider.get());
  }

  public static NFCPresenter_Factory create(Provider<NFCFragment> mFragmentProvider,
      Provider<NFCUseCase> nfcUseCaseProvider, Provider<UserDataManager> userManagerProvider) {
    return new NFCPresenter_Factory(mFragmentProvider, nfcUseCaseProvider, userManagerProvider);
  }

  public static NFCPresenter newInstance(NFCFragment mFragment, NFCUseCase nfcUseCase,
      UserDataManager userManager) {
    return new NFCPresenter(mFragment, nfcUseCase, userManager);
  }
}
